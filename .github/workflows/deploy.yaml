name: Deploy via Ansible

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Docker image tag"
        required: true
      db_name:
        description: "Postgres DB name"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python and Ansible
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip3 install ansible

      - name: Create Ansible vars
        run: |
          mkdir -p ansible/group_vars
          cat > ansible/group_vars/all.yml <<EOF
          dockerhub_username: hareeshkumarkhs
          dockerhub_pat: "${{ secrets.DOCKER_PAT }}"
          docker_image: hareeshkumarkhs/liquibase-schema-manager
          image_tag: "${{ github.event.inputs.image_tag }}"
          container_name: schema-manager
          postgres_host: "${{ secrets.POSTGRES_HOST }}"
          postgres_db: "${{ github.event.inputs.db_name }}"
          postgres_user: "${{ secrets.POSTGRES_USER }}"
          postgres_password: "${{ secrets.POSTGRES_PASSWORD }}"
          email_app_passcode: "${{ secrets.EMAIL_APP_PASSCODE }}"
          EOF

      - name: Add EC2 host to inventory
        run: |
          echo "[ec2]" > ansible/inventory.ini
          echo "${{ secrets.POSTGRES_HOST }}" >> ansible/inventory.ini
          echo "[ec2:vars]" >> ansible/inventory.ini
          echo "ansible_user=ubuntu" >> ansible/inventory.ini
          echo "ansible_ssh_private_key_file=ansible_key.pem" >> ansible/inventory.ini

      - name: Add SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ansible_key.pem
          chmod 600 ansible_key.pem

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ansible/inventory.ini ansible/playbook.yml
